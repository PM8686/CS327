2023-10-09 13:16:11|DEBUG|Created account: 1
2023-10-15 22:19:10|ERROR|ArgumentError: "Column expression or FROM clause expected, got <class 'bank.Bank'>."
2023-10-15 22:24:10|ERROR|OperationalError: '(sqlite3.OperationalError) no such column: account._bank_id\n[SQL: SELECT account._id AS account__id, account._bank_id AS account__bank_id, account._account_number AS account__account_number \nFROM account \nWHERE ? = account._bank_id]\n[parameters: (1,)]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)'
2023-10-15 22:24:59|ERROR|OperationalError: '(sqlite3.OperationalError) no such column: 
account._bank_id\n[SQL: SELECT account._id AS account__id, account._bank_id AS account__bank_id, 
account._account_number AS account__account_number \nFROM account \nWHERE ? = account._bank_id]\n[parameters: 
(1,)]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)'
2023-10-15 22:30:44|ERROR|NoForeignKeysError: "Could not determine join condition between parent/child tables on relationship Bank._accounts - there are no foreign keys linking these tables.  Ensure that referencing columns are associated with a ForeignKey or ForeignKeyConstraint, or specify a 'primaryjoin' expression."
2023-10-15 22:34:42|ERROR|OperationalError: '(sqlite3.OperationalError) no such column: account._bank_id\n[SQL: SELECT account._id AS account__id, account._bank_id AS account__bank_id, account._account_number AS account__account_number \nFROM account \nWHERE ? = account._bank_id]\n[parameters: (1,)]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)'
2023-10-15 22:35:52|ERROR|TypeError: '__init__() takes 1 positional argument but 2 were given'
2023-10-15 22:36:59|DEBUG|Created account: None
2023-10-15 22:36:59|ERROR|FlushError: 'Attempting to flush an item of type <class \'accounts.CheckingAccount\'> 
as a member of collection "Bank._accounts". Expected an object of type <class \'accounts.Account\'> 
or a polymorphic subclass of this type. If <class \'accounts.CheckingAccount\'> is a subclass of <class \'accounts.Account\'>,
 configure mapper "mapped class Account->account" to load this subtype polymorphically, or set enable_typechecks=False to allow any 
 subtype to be accepted for flush. '
2023-10-15 22:47:18|DEBUG|Created account: None
2023-10-15 22:47:18|ERROR|FlushError: 'Attempting to flush an item of type <class \'accounts.CheckingAccount\'> as a member of collection "Bank._accounts". Expected an object of type <class \'accounts.Account\'> or a polymorphic subclass of this type. If <class \'accounts.CheckingAccount\'> is a subclass of <class \'accounts.Account\'>, configure mapper "mapped class Account->account" to load this subtype polymorphically, or set enable_typechecks=False to allow any subtype to be accepted for flush. '
2023-10-15 22:50:50|ERROR|TypeError: "Session.__init__() got an unexpected keyword argument 'binde'"
2023-10-15 22:51:26|DEBUG|Created account: None
2023-10-15 22:51:26|ERROR|FlushError: 'Attempting to flush an item of type <class \'accounts.CheckingAccount\'> as a member of collection "Bank._accounts". Expected an object of type <class \'accounts.Account\'> or a polymorphic subclass of this type. If <class \'accounts.CheckingAccount\'> is a subclass of <class \'accounts.Account\'>, configure mapper "mapped class Account->account" to load this subtype polymorphically, or set enable_typechecks=False to allow any subtype to be accepted for flush. '
2023-10-15 22:58:43|DEBUG|Created account: None
2023-10-15 22:58:43|ERROR|FlushError: 'Attempting to flush an item of type <class \'accounts.CheckingAccount\'> as a member of collection "Bank._accounts". Expected an object of type <class \'accounts.Account\'> or a polymorphic subclass of this type. If <class \'accounts.CheckingAccount\'> is a subclass of <class \'accounts.Account\'>, configure mapper "mapped class Account->account" to load this subtype polymorphically, or set enable_typechecks=False to allow any subtype to be accepted for flush. '
2023-10-15 23:05:48|DEBUG|Created account: None
2023-10-15 23:05:48|ERROR|FlushError: 'Attempting to flush an item of type <class \'accounts.CheckingAccount\'> as a member of collection 
"Bank._accounts". Expected an object of type <class \'accounts.Account\'> or a polymorphic subclass of this type. 
If <class \'accounts.CheckingAccount\'> is a subclass of <class \'accounts.Account\'>, configure mapper "mapped class Account->account" to load 
this subtype polymorphically, or set enable_typechecks=False to allow any subtype to be accepted for flush. '
2023-10-15 23:14:04|DEBUG|Created account: None
2023-10-15 23:14:09|ERROR|TypeError: 'unsupported format string passed to NoneType.__format__'
2023-10-15 23:14:42|DEBUG|Created account: None
2023-10-15 23:17:16|DEBUG|Created account: 1
2023-10-15 23:17:38|DEBUG|Created account: 2
2023-10-15 23:18:40|DEBUG|Created transaction: 1, 2023-08-19
2023-10-15 23:18:40|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:24:41|ERROR|ValueError: 'max() arg is an empty sequence'
2023-10-15 23:26:33|DEBUG|Created transaction: 1, 2023-08-19
2023-10-15 23:26:33|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:27:51|DEBUG|Created transaction: 1, 2023-01-19
2023-10-15 23:27:51|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:28:45|DEBUG|Created transaction: 1, 2023-08-19
2023-10-15 23:28:45|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:29:38|DEBUG|Created transaction: 1, 2023-01-10
2023-10-15 23:29:38|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:32:01|DEBUG|Created account: 1
2023-10-15 23:32:33|DEBUG|Created transaction: 1, 2023-08-19
2023-10-15 23:32:33|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:33:20|DEBUG|Created account: 1
2023-10-15 23:33:29|DEBUG|Created transaction: 1, 2023-08-10
2023-10-15 23:33:29|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:36:50|DEBUG|Created transaction: 1, 2020-02-20
2023-10-15 23:37:12|DEBUG|Created transaction: 1, 2023-09-19
2023-10-15 23:37:35|DEBUG|Created account: 1
2023-10-15 23:37:47|DEBUG|Created transaction: 1, 2023-08-19
2023-10-15 23:38:22|DEBUG|Created transaction: 1, 2023-10-10
2023-10-15 23:38:22|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:39:31|DEBUG|Created transaction: 1, 2023-02-20
2023-10-15 23:39:31|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:40:17|DEBUG|Created transaction: 1, 2023-02-02
2023-10-15 23:40:17|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:40:51|DEBUG|Created transaction: 1, 2023-08-10
2023-10-15 23:40:51|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:42:24|DEBUG|Created transaction: 1, 2023-08-18
2023-10-15 23:42:24|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:43:12|ERROR|ValueError: "invalid literal for int() with base 10: '`'"
2023-10-15 23:43:25|DEBUG|Created transaction: 1, 2023-09-10
2023-10-15 23:43:25|ERROR|TypeError: "'>=' not supported between instances of 'datetime.date' and 'int'"
2023-10-15 23:46:37|ERROR|TypeError: "__init__() missing 1 required positional argument: 'acct_num'"
2023-10-15 23:47:51|ERROR|TypeError: "__init__() missing 1 required positional argument: 'session'"
2023-10-15 23:51:27|DEBUG|Created transaction: 1, 100
2023-10-15 23:51:27|ERROR|StatementError: '(builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.\n[SQL: INSERT INTO "transaction" 
(_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: [{\'_exempt\': False, \'_date\': <sqlalchemy.orm.session.Session object at 0x7f029aeeaa90>, \'_account_id\': 1, \'_amt\': Decimal(\'100\')}]]'
2023-10-15 23:54:34|DEBUG|Created transaction: 1, 200
2023-10-15 23:54:34|ERROR|StatementError: '(builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: [{\'_date\': <sqlalchemy.orm.session.Session object at 0x7f0ca791ae50>, \'_exempt\': False, \'_account_id\': 1, \'_amt\': Decimal(\'200\')}]]'
2023-10-15 23:56:42|DEBUG|Created transaction: 1, 200
2023-10-15 23:56:42|ERROR|StatementError: '(builtins.TypeError) SQLite DateTime type only accepts Python datetime and date objects as input.\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: [{\'_account_id\': 1, \'_amt\': Decimal(\'200\'), \'_exempt\': False, \'_date\': <sqlalchemy.orm.session.Session object at 0x7ff8438050d0>}]]'
2023-10-16 00:02:44|ERROR|TypeError: "__init__() got multiple values for argument 'date'"
2023-10-16 00:06:16|DEBUG|Created account: 1
2023-10-16 00:06:24|DEBUG|Created transaction: 1, 200
2023-10-16 00:06:24|ERROR|ProgrammingError: '(sqlite3.ProgrammingError) Error binding parameter 2: type \'decimal.Decimal\' is not supported\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: (1, Decimal(\'200\'), \'2023-08-09 00:00:00.000000\', <sqlalchemy.orm.session.Session object at 0x7fa937c60390>)]\n(Background on this error at: https://sqlalche.me/e/14/f405)'
2023-10-16 00:08:00|DEBUG|Created transaction: 1, 200
2023-10-16 00:08:00|ERROR|ProgrammingError: '(sqlite3.ProgrammingError) Error binding parameter 2: type \'decimal.Decimal\' is not supported\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: (1, Decimal(\'200\'), \'2023-08-18 00:00:00.000000\', <sqlalchemy.orm.session.Session object at 0x7f2161176e50>)]\n(Background on this error at: https://sqlalche.me/e/14/f405)'
2023-10-16 00:08:16|DEBUG|Created account: 1
2023-10-16 00:09:24|DEBUG|Created account: 1
2023-10-16 00:09:39|DEBUG|Created transaction: 1, 2023
2023-10-16 00:09:39|ERROR|ProgrammingError: '(sqlite3.ProgrammingError) Error binding parameter 2: type \'decimal.Decimal\' is not supported\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: (1, Decimal(\'2023\'), \'2023-09-09 00:00:00.000000\', <sqlalchemy.orm.session.Session object at 0x7f17f2fa8e90>)]\n(Background on this error at: https://sqlalche.me/e/14/f405)'
2023-10-16 00:12:28|DEBUG|Created account: 1
2023-10-16 00:13:02|DEBUG|Created transaction: 1, 100
2023-10-16 00:13:02|ERROR|ProgrammingError: '(sqlite3.ProgrammingError) Error binding parameter 4: type \'Session\' is not supported\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: (1, 100.0, \'2023-09-19 00:00:00.000000\', <sqlalchemy.orm.session.Session object at 0x7f48818c9650>)]\n(Background on this error at: https://sqlalche.me/e/14/f405)'
2023-10-16 00:15:52|DEBUG|Created transaction: 1, 100
2023-10-16 00:17:48|DEBUG|Created transaction: 1, 100
2023-10-16 00:18:13|DEBUG|Created transaction: 1, 2023
2023-10-16 00:18:13|ERROR|ProgrammingError: '(sqlite3.ProgrammingError) Error binding parameter 4: type \'Session\' is not supported\n[SQL: INSERT INTO "transaction" (_account_id, _amt, _date, _exempt) VALUES (?, ?, ?, ?)]\n[parameters: (1, 2023.0, \'2023-09-09 00:00:00.000000\', <sqlalchemy.orm.session.Session object at 0x7fb572094b10>)]\n(Background on this error at: https://sqlalche.me/e/14/f405)'
2023-10-16 00:20:06|DEBUG|Created transaction: 1, 2023
2023-10-16 00:22:03|DEBUG|Created transaction: 1, 5436
2023-10-16 00:25:20|DEBUG|Created transaction: 1, 23
2023-10-16 00:26:54|DEBUG|Created transaction: 1, 202
2023-10-16 00:27:14|DEBUG|Created transaction: 1, 2023
2023-10-16 00:29:43|DEBUG|Created transaction: 1, 2023
2023-10-16 00:29:43|ERROR|OperationalError: '(sqlite3.OperationalError) no such column: savings_account._interest_rate\n[SQL: SELECT savings_account._interest_rate AS savings_account__interest_rate, savings_account._monthly_limit AS savings_account__monthly_limit, savings_account._daily_limit AS savings_account__daily_limit \nFROM savings_account \nWHERE ? = savings_account._id]\n[parameters: (1,)]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)'
2023-10-16 00:30:06|DEBUG|Created account: 1
2023-10-16 00:30:16|DEBUG|Created transaction: 1, 2023
2023-10-16 00:32:02|DEBUG|Created transaction: 1, -300
2023-10-16 00:32:02|ERROR|TypeError: "can't compare datetime.datetime to datetime.date"
2023-10-16 00:36:30|DEBUG|Created account: 1
2023-10-16 00:36:43|DEBUG|Created transaction: 1, 2023
2023-10-16 00:36:59|DEBUG|Created transaction: 1, -500
2023-10-16 00:40:38|DEBUG|Created transaction: 1, 2
2023-10-16 00:44:15|DEBUG|Created account: 1
2023-10-16 00:44:20|DEBUG|Created account: 2
2023-10-16 00:44:42|DEBUG|Created transaction: 1, 120
2023-10-16 00:44:45|DEBUG|Created transaction: 1, 0.49200000000000005
2023-10-16 00:44:45|DEBUG|Triggered interest and fees
2023-10-16 01:00:23|DEBUG|Created account: 32
2023-10-16 01:28:15|DEBUG|Loaded from bank.db
2023-10-16 01:30:48|DEBUG|Loaded from bank.db
2023-10-16 01:30:59|DEBUG|Saved to bank.db
2023-10-16 01:31:11|DEBUG|Loaded from bank.db
2023-10-16 01:33:03|DEBUG|Loaded from bank.db
2023-10-16 01:34:28|DEBUG|Loaded from bank.db
2023-10-16 01:34:53|DEBUG|Loaded from bank.db
2023-10-16 01:34:59|DEBUG|Loaded from bank.db
2023-10-16 01:35:12|DEBUG|Loaded from bank.db
2023-10-16 07:46:17|DEBUG|Loaded from bank.db
2023-10-16 08:55:39|DEBUG|Loaded from bank.db
2023-10-16 08:55:59|DEBUG|Loaded from bank.db
2023-10-16 08:56:51|DEBUG|Loaded from bank.db
2023-10-16 08:57:01|DEBUG|Created account: 4
2023-10-16 08:57:01|DEBUG|Saved to bank.db
2023-10-16 08:59:30|DEBUG|Loaded from bank.db
2023-10-16 09:01:02|DEBUG|Loaded from bank.db
2023-10-16 09:04:44|DEBUG|Loaded from bank.db
2023-10-16 09:10:09|DEBUG|Loaded from bank.db
2023-10-16 09:13:17|DEBUG|Loaded from bank.db
2023-10-16 09:14:03|DEBUG|Loaded from bank.db
2023-10-16 09:16:24|DEBUG|Loaded from bank.db
2023-10-16 09:17:41|DEBUG|Loaded from bank.db
2023-10-16 09:18:42|DEBUG|Loaded from bank.db
2023-10-16 09:18:48|ERROR|TclError: 'can\'t invoke "label" command: application has been destroyed'
2023-10-16 09:19:30|DEBUG|Loaded from bank.db
2023-10-17 00:02:44|DEBUG|Loaded from bank.db
2023-10-17 00:03:15|DEBUG|Loaded from bank.db
2023-10-17 00:04:03|DEBUG|Loaded from bank.db
2023-10-17 00:04:39|DEBUG|Loaded from bank.db
2023-10-17 00:05:01|DEBUG|Loaded from bank.db
2023-10-17 00:05:40|DEBUG|Loaded from bank.db
2023-10-17 00:08:21|DEBUG|Loaded from bank.db
2023-10-17 00:08:35|DEBUG|Created account: 5
2023-10-17 00:08:35|DEBUG|Saved to bank.db
2023-10-17 00:09:03|DEBUG|Loaded from bank.db
2023-10-17 00:23:22|DEBUG|Loaded from bank.db
2023-10-17 00:23:35|DEBUG|Created account: 6
2023-10-17 00:23:35|DEBUG|Saved to bank.db
2023-10-17 00:25:25|DEBUG|Loaded from bank.db
2023-10-17 00:25:34|DEBUG|Created account: 7
2023-10-17 00:25:34|DEBUG|Saved to bank.db
2023-10-17 00:32:08|DEBUG|Loaded from bank.db
2023-10-17 00:32:24|DEBUG|Loaded from bank.db
2023-10-17 00:39:14|DEBUG|Loaded from bank.db
2023-10-17 00:39:14|ERROR|AttributeError: "'str' object has no attribute 'get'"
2023-10-17 00:40:58|DEBUG|Loaded from bank.db
2023-10-17 00:41:12|DEBUG|Loaded from bank.db
2023-10-17 01:08:06|DEBUG|Loaded from bank.db
2023-10-17 01:08:06|ERROR|NameError: "name 'AccountsListFrame' is not defined"
2023-10-17 01:08:18|DEBUG|Loaded from bank.db
2023-10-17 01:40:39|DEBUG|Loaded from bank.db
2023-10-17 01:40:45|DEBUG|Created account: 8
2023-10-17 01:40:45|DEBUG|Saved to bank.db
2023-10-17 01:41:46|DEBUG|Loaded from bank.db
2023-10-17 01:42:03|DEBUG|Created account: 9
2023-10-17 01:42:03|DEBUG|Saved to bank.db
2023-10-17 01:42:41|DEBUG|Loaded from bank.db
2023-10-17 01:42:47|DEBUG|Created account: 10
2023-10-17 01:42:47|DEBUG|Saved to bank.db
2023-10-17 01:42:58|DEBUG|Created account: 11
2023-10-17 01:42:58|DEBUG|Saved to bank.db
2023-10-17 01:43:37|DEBUG|Loaded from bank.db
2023-10-17 01:43:48|DEBUG|Created account: 12
2023-10-17 01:43:48|DEBUG|Saved to bank.db
2023-10-17 01:55:06|DEBUG|Loaded from bank.db
2023-10-17 01:55:06|DEBUG|Saved to bank.db
2023-10-17 01:55:42|DEBUG|Loaded from bank.db
2023-10-17 01:55:55|DEBUG|Loaded from bank.db
2023-10-17 01:56:02|DEBUG|Created account: 1
2023-10-17 01:56:02|DEBUG|Saved to bank.db
2023-10-17 01:56:39|DEBUG|Loaded from bank.db
2023-10-17 02:00:48|DEBUG|Loaded from bank.db
2023-10-17 02:00:57|DEBUG|Created account: 2
2023-10-17 02:00:57|DEBUG|Saved to bank.db
2023-10-17 02:01:44|DEBUG|Loaded from bank.db
2023-10-17 02:01:54|DEBUG|Created account: 3
2023-10-17 02:01:54|DEBUG|Saved to bank.db
2023-10-17 02:02:03|DEBUG|Created account: 4
2023-10-17 02:02:03|DEBUG|Saved to bank.db
2023-10-17 02:03:28|DEBUG|Loaded from bank.db
2023-10-17 02:04:20|DEBUG|Loaded from bank.db
2023-10-17 02:04:29|DEBUG|Created account: 5
2023-10-17 02:04:29|DEBUG|Saved to bank.db
2023-10-17 02:05:00|DEBUG|Loaded from bank.db
2023-10-17 02:05:00|DEBUG|Saved to bank.db
2023-10-17 02:05:06|DEBUG|Created account: 1
2023-10-17 02:05:06|DEBUG|Saved to bank.db
2023-10-17 02:05:31|DEBUG|Loaded from bank.db
2023-10-17 02:05:37|DEBUG|Created account: 2
2023-10-17 02:05:37|DEBUG|Saved to bank.db
2023-10-17 02:07:25|DEBUG|Loaded from bank.db
2023-10-17 02:34:49|DEBUG|Loaded from bank.db
2023-10-17 02:36:32|DEBUG|Loaded from bank.db
2023-10-17 02:39:37|DEBUG|Loaded from bank.db
2023-10-17 02:46:51|DEBUG|Loaded from bank.db
2023-10-17 02:47:22|DEBUG|Loaded from bank.db
2023-10-17 02:47:22|ERROR|TclError: 'cannot use geometry manager pack inside . which already has slaves managed by grid'
2023-10-17 02:48:13|DEBUG|Loaded from bank.db
2023-10-17 02:48:27|DEBUG|Loaded from bank.db
2023-10-17 02:48:35|DEBUG|Created account: 3
2023-10-17 02:48:35|DEBUG|Saved to bank.db
2023-10-17 02:49:48|DEBUG|Loaded from bank.db
2023-10-17 02:50:04|DEBUG|Loaded from bank.db
2023-10-17 02:50:47|DEBUG|Loaded from bank.db
2023-10-17 02:51:02|DEBUG|Loaded from bank.db
2023-10-17 02:53:40|DEBUG|Loaded from bank.db
